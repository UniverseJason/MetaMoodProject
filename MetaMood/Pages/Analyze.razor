@page "/analyze"
@inject HttpClient httpClient;
@inject IJSRuntime JsRuntime;

<PageTitle>Analyze</PageTitle>

<div class="analysis-container">
    <div class="analysis-input-container">
        <p class="platform-label">Spotify</p>
        <input class="profile-input" type="text" placeholder="Enter Spotify ID... " @bind="SpotifyID" />

        <p class="platform-label">Reddit</p>
        <input class="profile-input" type="text" placeholder="Enter Reddit ID... " @bind="RedditID" />

        <p class="platform-label">Twitter</p>
        <input class="profile-input" type="text" placeholder="Enter Twitter ID... " @bind="TwitterID" />

        <button type="submit" class="submit-btn" @onclick="GetAllAnalysisAsync">Submit</button>
    </div>
    <div class="analysis-output-container">
        <p>@Test</p>
    </div>
</div>

@code {

    public string? SpotifyID;

    public string? RedditID;

    public string? TwitterID;

    public string? Test;

    public async Task GetAllAnalysisAsync()
    {
        await GetSpotifyAccessTokenAsync();
    }

    public async Task GetSpotifyAccessTokenAsync()
    {
        // Make a request to the API to get the number of records for the given query
        var requestAccessToken = new HttpRequestMessage(HttpMethod.Get, $"https://accounts.spotify.com/authorize?client_id=b4f82aba44b74f7caee510bd165499fa&response_type=token&redirect_uri=analyze");
        requestAccessToken = requestAccessToken.SetBrowserRequestMode(BrowserRequestMode.NoCors);
        HttpResponseMessage responseAccessToken = await httpClient.SendAsync(requestAccessToken);

        // Check if the response has a success status code
        if (responseAccessToken.IsSuccessStatusCode)
        {

            // Extract the body of the successful response as a string asynchronously
            string responseAccessTokenContent = await responseAccessToken.Content.ReadAsStringAsync();
            Test = responseAccessTokenContent;

        }
        else
        {
            Test = responseAccessToken.StatusCode.ToString();
            foreach (var x in responseAccessToken.Headers)
            {
                Test += x + " | ";
            }
        }
    }
}
