@using System.ComponentModel;
@inject HttpClient httpClient;

<h3>Data Table</h3>

@if(tracks is null)
{
    <svg class="loading-progress">
        <circle r="40%" cx="50%" cy="50%" />
        <circle r="40%" cx="50%" cy="50%" />
    </svg>

}
else
{
    SpotifyTrackDTO obj = new SpotifyTrackDTO();

    <table class="data-table">
        <thead>
            <tr>
                @foreach (PropertyDescriptor descriptor in TypeDescriptor.GetProperties(new SpotifyTrackDTO()))
                {
                    string name = descriptor.DisplayName;
                    <th class="table-head">@name</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach(var track in tracks)
            {
                <tr>
                    @foreach (PropertyDescriptor descriptor in TypeDescriptor.GetProperties(new SpotifyTrackDTO()))
                    {

                        if (descriptor.GetType() == typeof(int?) || descriptor.GetType() == typeof(double?))
                        {
                            <td class="table-cell number-cell">@descriptor.GetValue(track)</td>
                        }
                        else
                        {
                            <td class="table-cell">@descriptor.GetValue(track)</td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    IList<SpotifyTrackDTO>? tracks;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "/spotify-tracks?pageSize=10&pageNumber=1");
        HttpResponseMessage response = await httpClient.SendAsync(request);

        if(response.IsSuccessStatusCode)
        {
            tracks = await response.Content.ReadFromJsonAsync<IList<SpotifyTrackDTO>>();
        }
    }

}
